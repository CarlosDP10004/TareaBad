// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gestioncomprasAPI.Models;

namespace gestioncomprasAPI.Migrations
{
    [DbContext(typeof(GestionComprasContext))]
    partial class GestionComprasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("gestioncomprasAPI.Models.Autorizacion", b =>
                {
                    b.Property<int>("IdAutorizacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AutorizacionInstalacion");

                    b.Property<bool?>("AutorizacionMantenimiento");

                    b.Property<bool?>("AutorizacionVenta");

                    b.Property<int>("IdEmpresaProveedora");

                    b.HasKey("IdAutorizacion");

                    b.HasIndex("IdEmpresaProveedora");

                    b.ToTable("Autorizacion");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.Bitacora", b =>
                {
                    b.Property<int>("IdRegistroBitacora")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime");

                    b.Property<int>("IdUsuario");

                    b.Property<string>("Mantenimiento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdRegistroBitacora");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Bitacora");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmpresaProveedora");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime");

                    b.Property<int>("IdInstitucionG");

                    b.Property<string>("TipoContratacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("TotalCompra")
                        .HasColumnType("money");

                    b.HasKey("IdCompra");

                    b.HasIndex("EmpresaProveedora");

                    b.HasIndex("IdInstitucionG");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.ContactoEmpresa", b =>
                {
                    b.Property<int>("IdContactoEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionContacto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("IdEmpresaProveedora");

                    b.Property<int>("TipoContacto");

                    b.HasKey("IdContactoEmpresa");

                    b.HasIndex("IdEmpresaProveedora");

                    b.HasIndex("TipoContacto");

                    b.ToTable("ContactoEmpresa");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.ContactoInstitucion", b =>
                {
                    b.Property<int>("IdContactoInstitucion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionContacto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("IdInstitucionG");

                    b.Property<int>("TipoContacto");

                    b.HasKey("IdContactoInstitucion");

                    b.HasIndex("IdInstitucionG");

                    b.HasIndex("TipoContacto");

                    b.ToTable("ContactoInstitucion");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.ContactoPersona", b =>
                {
                    b.Property<int>("IdContactoPersona")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionContacto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("IdPersona");

                    b.Property<int>("IdTipoContacto");

                    b.HasKey("IdContactoPersona");

                    b.HasIndex("IdPersona");

                    b.HasIndex("IdTipoContacto");

                    b.ToTable("ContactoPersona");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.DetalleCompra", b =>
                {
                    b.Property<int>("IdDetalleCompra")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GarantiaMeses");

                    b.Property<int>("IdCompra");

                    b.Property<int>("IdProducto");

                    b.Property<decimal>("Iva")
                        .HasColumnType("money");

                    b.HasKey("IdDetalleCompra");

                    b.HasIndex("IdCompra");

                    b.HasIndex("IdProducto");

                    b.ToTable("DetalleCompra");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.Empleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdEmpresa");

                    b.Property<int>("IdPersona");

                    b.Property<int>("Puesto");

                    b.HasKey("IdEmpleado");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdPersona");

                    b.HasIndex("Puesto");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.EmpresaProveedora", b =>
                {
                    b.Property<int>("IdEmpresaProveedora")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DireccionEmpresa")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("LogotipoEmpresa")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<decimal?>("MontoPermitido")
                        .HasColumnType("money");

                    b.Property<string>("Nitempresa")
                        .IsRequired()
                        .HasColumnName("NITEmpresa")
                        .HasMaxLength(16)
                        .IsUnicode(false);

                    b.Property<string>("NombreEmpresa")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("Responsable");

                    b.HasKey("IdEmpresaProveedora");

                    b.ToTable("EmpresaProveedora");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.Instalacion", b =>
                {
                    b.Property<int>("IdInstalacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EncargadoInstalacion");

                    b.Property<DateTime?>("FechaFinInstalacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaInicioInstalacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdEmpresa");

                    b.Property<int>("IdProducto");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("IdInstalacion");

                    b.HasIndex("EncargadoInstalacion");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdProducto");

                    b.ToTable("Instalacion");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.InstitucionGubernamental", b =>
                {
                    b.Property<int>("IdInstitucionG")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EncargadoUaci")
                        .HasColumnName("EncargadoUACI");

                    b.Property<string>("LogotipoInstitucionG")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("NombreInstitucionG")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("IdInstitucionG");

                    b.HasIndex("EncargadoUaci");

                    b.ToTable("InstitucionGubernamental");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.Lista", b =>
                {
                    b.Property<int>("IdLista")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreLista")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("TipoLista")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdLista");

                    b.ToTable("Lista");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.Mantenimiento", b =>
                {
                    b.Property<int>("IdMantenimiento")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EstadoFinal")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EstadoInicial")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("FechaFinMantenimiento")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaInicioMantenimiento")
                        .HasColumnType("datetime");

                    b.Property<int>("IdEmpleado");

                    b.Property<int>("IdProducto");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("IdMantenimiento");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdProducto");

                    b.ToTable("Mantenimiento");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.Permiso", b =>
                {
                    b.Property<int>("IdPermiso")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombrePermiso")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("IdPermiso");

                    b.ToTable("Permiso");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoPersona")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Dui")
                        .IsRequired()
                        .HasColumnName("DUI")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("FotoPerfil")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Isss")
                        .IsRequired()
                        .HasColumnName("ISSS")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Nit")
                        .IsRequired()
                        .HasColumnName("NIT")
                        .HasMaxLength(16)
                        .IsUnicode(false);

                    b.Property<string>("NombrePersona")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("IdPersona");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnioFabricacion");

                    b.Property<double>("CapacidadBtu")
                        .HasColumnName("CapacidadBTU");

                    b.Property<int>("IdEmpresaProveedora");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("PrecioUnidad")
                        .HasColumnType("money");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdEmpresaProveedora");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.HasKey("IdRol");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.RolPermiso", b =>
                {
                    b.Property<int>("IdRolPermiso")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdPermiso");

                    b.Property<int>("IdRol");

                    b.HasKey("IdRolPermiso");

                    b.HasIndex("IdPermiso");

                    b.HasIndex("IdRol");

                    b.ToTable("RolPermiso");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.SPPermisoRecuperarTodoResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdPermiso");

                    b.Property<string>("NombrePermiso");

                    b.HasKey("Id");

                    b.ToTable("SPPermisoRecuperarTodoResult");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.Usuario", b =>
                {
                    b.Property<int>("Idusuario")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<bool>("Estado");

                    b.Property<int>("IdPersona");

                    b.Property<int>("Intento");

                    b.HasKey("Idusuario");

                    b.HasIndex("IdPersona");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.UsuarioRol", b =>
                {
                    b.Property<int>("IdUsuarioRol")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdRol");

                    b.Property<int>("IdUsuario");

                    b.HasKey("IdUsuarioRol");

                    b.HasIndex("IdRol");

                    b.HasIndex("IdUsuario");

                    b.ToTable("UsuarioRol");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.Autorizacion", b =>
                {
                    b.HasOne("gestioncomprasAPI.Models.EmpresaProveedora", "IdEmpresaProveedoraNavigation")
                        .WithMany("Autorizacion")
                        .HasForeignKey("IdEmpresaProveedora")
                        .HasConstraintName("FK_Autorizacion_EmpresaProveedora");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.Bitacora", b =>
                {
                    b.HasOne("gestioncomprasAPI.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Bitacora")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_Bitacora_Usuario");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.Compra", b =>
                {
                    b.HasOne("gestioncomprasAPI.Models.EmpresaProveedora", "EmpresaProveedoraNavigation")
                        .WithMany("Compra")
                        .HasForeignKey("EmpresaProveedora")
                        .HasConstraintName("FK_Compra_EmpresaProveedora");

                    b.HasOne("gestioncomprasAPI.Models.InstitucionGubernamental", "IdInstitucionGNavigation")
                        .WithMany("Compra")
                        .HasForeignKey("IdInstitucionG")
                        .HasConstraintName("FK_Compra_InstitucionGubernamental");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.ContactoEmpresa", b =>
                {
                    b.HasOne("gestioncomprasAPI.Models.EmpresaProveedora", "IdEmpresaProveedoraNavigation")
                        .WithMany("ContactoEmpresa")
                        .HasForeignKey("IdEmpresaProveedora")
                        .HasConstraintName("FK_ContactoEmpresa_EmpresaProveedora");

                    b.HasOne("gestioncomprasAPI.Models.Lista", "TipoContactoNavigation")
                        .WithMany("ContactoEmpresa")
                        .HasForeignKey("TipoContacto")
                        .HasConstraintName("FK_ContactoEmpresa_Lista");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.ContactoInstitucion", b =>
                {
                    b.HasOne("gestioncomprasAPI.Models.InstitucionGubernamental", "IdInstitucionGNavigation")
                        .WithMany("ContactoInstitucion")
                        .HasForeignKey("IdInstitucionG")
                        .HasConstraintName("FK_ContactoInstitucion_InstitucionGubernamental");

                    b.HasOne("gestioncomprasAPI.Models.Lista", "TipoContactoNavigation")
                        .WithMany("ContactoInstitucion")
                        .HasForeignKey("TipoContacto")
                        .HasConstraintName("FK_ContactoInstitucion_Lista");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.ContactoPersona", b =>
                {
                    b.HasOne("gestioncomprasAPI.Models.Persona", "IdPersonaNavigation")
                        .WithMany("ContactoPersona")
                        .HasForeignKey("IdPersona")
                        .HasConstraintName("FK_ContactoPersona_Persona");

                    b.HasOne("gestioncomprasAPI.Models.Lista", "IdTipoContactoNavigation")
                        .WithMany("ContactoPersona")
                        .HasForeignKey("IdTipoContacto")
                        .HasConstraintName("FK_ContactoPersona_Lista");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.DetalleCompra", b =>
                {
                    b.HasOne("gestioncomprasAPI.Models.Compra", "IdCompraNavigation")
                        .WithMany("DetalleCompra")
                        .HasForeignKey("IdCompra")
                        .HasConstraintName("FK_DetalleCompra_Compra");

                    b.HasOne("gestioncomprasAPI.Models.Producto", "IdProductoNavigation")
                        .WithMany("DetalleCompra")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_DetalleCompra_Producto");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.Empleado", b =>
                {
                    b.HasOne("gestioncomprasAPI.Models.EmpresaProveedora", "IdEmpresaNavigation")
                        .WithMany("Empleado")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("FK_Empleado_EmpresaProveedora");

                    b.HasOne("gestioncomprasAPI.Models.Persona", "IdPersonaNavigation")
                        .WithMany("Empleado")
                        .HasForeignKey("IdPersona")
                        .HasConstraintName("FK_Empleado_Persona");

                    b.HasOne("gestioncomprasAPI.Models.Lista", "PuestoNavigation")
                        .WithMany("Empleado")
                        .HasForeignKey("Puesto")
                        .HasConstraintName("FK_Empleado_Lista");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.Instalacion", b =>
                {
                    b.HasOne("gestioncomprasAPI.Models.Empleado", "EncargadoInstalacionNavigation")
                        .WithMany("Instalacion")
                        .HasForeignKey("EncargadoInstalacion")
                        .HasConstraintName("FK_Instalacion_Empleado");

                    b.HasOne("gestioncomprasAPI.Models.EmpresaProveedora", "IdEmpresaNavigation")
                        .WithMany("Instalacion")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("FK_Instalacion_EmpresaProveedora");

                    b.HasOne("gestioncomprasAPI.Models.Producto", "IdProductoNavigation")
                        .WithMany("Instalacion")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_Instalacion_Producto");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.InstitucionGubernamental", b =>
                {
                    b.HasOne("gestioncomprasAPI.Models.Usuario", "EncargadoUaciNavigation")
                        .WithMany("InstitucionGubernamental")
                        .HasForeignKey("EncargadoUaci")
                        .HasConstraintName("FK_InstitucionGubernamental_Usuario");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.Mantenimiento", b =>
                {
                    b.HasOne("gestioncomprasAPI.Models.Empleado", "IdEmpleadoNavigation")
                        .WithMany("Mantenimiento")
                        .HasForeignKey("IdEmpleado")
                        .HasConstraintName("FK_Mantenimiento_Empleado");

                    b.HasOne("gestioncomprasAPI.Models.Producto", "IdProductoNavigation")
                        .WithMany("Mantenimiento")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_Mantenimiento_Producto");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.Producto", b =>
                {
                    b.HasOne("gestioncomprasAPI.Models.EmpresaProveedora", "IdEmpresaProveedoraNavigation")
                        .WithMany("Producto")
                        .HasForeignKey("IdEmpresaProveedora")
                        .HasConstraintName("FK_Producto_EmpresaProveedora");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.RolPermiso", b =>
                {
                    b.HasOne("gestioncomprasAPI.Models.Permiso", "IdPermisoNavigation")
                        .WithMany("RolPermiso")
                        .HasForeignKey("IdPermiso")
                        .HasConstraintName("FK_RolPermiso_Permiso");

                    b.HasOne("gestioncomprasAPI.Models.Rol", "IdRolNavigation")
                        .WithMany("RolPermiso")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK_RolPermiso_Rol");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.Usuario", b =>
                {
                    b.HasOne("gestioncomprasAPI.Models.Persona", "IdPersonaNavigation")
                        .WithMany("Usuario")
                        .HasForeignKey("IdPersona")
                        .HasConstraintName("FK_Usuario_Persona");
                });

            modelBuilder.Entity("gestioncomprasAPI.Models.UsuarioRol", b =>
                {
                    b.HasOne("gestioncomprasAPI.Models.Rol", "IdRolNavigation")
                        .WithMany("UsuarioRol")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK_UsuarioRol_Rol");

                    b.HasOne("gestioncomprasAPI.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("UsuarioRol")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_UsuarioRol_Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
